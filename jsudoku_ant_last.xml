<?xml version="1.0" encoding="UTF-8"?>

<project name="jSudoku" basedir="." default="jar">

	<!--Full name of the app-->
	<property name="app.name" value="jSudoku" />
	<property name="app.shortName" value="jSudoku" />
	<property name="app.version" value="1.0" />
	<property name="main.class" value="org.kdu.jsudoku.control.Controller" />
	<property name="main.path" value="org/kdu/jsudoku/control/Controller.class" />

	<!--Git variables-->
	<property name="git.repo" value="jSudoku" />
	<property name="classes.home" value="${git.repo}/bin" />
	<property name="lib.home" value="${git.repo}/lib" />

	<!--Checkstyle variables-->
	<property name="checkstyle_ver" value="6.11.2" />
	<property name="checkstyle_dir" value="/home/hudson/.hudson/checkstyle-${checkstyle_ver}/" />
	<property name="checkstyle_report" value="checkstyle_results.xml" />
		
	<!--Checkstyle-->
	<taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" classpath="${checkstyle_dir}/checkstyle-${checkstyle_ver}-all.jar" />
	
	<path id="project.class.path">
		<pathelement path="${lib.home}/kduXtra.jar" />
		<pathelement path="${lib.home}/looks-1.3.2.jar" />
	</path>
	
	<!-- GIT Macro-->
	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		<sequential>
			<echo message="git @{command}" />
			<exec executable="git" dir="@{dir}">
				<arg value="@{command}" />
				<args />
			</exec>
		</sequential>
	</macrodef>

    <!-- compile jSudoku-->
	<target name="sub.compile" depends="sub.clear,git.getsource,checker">
		<echo message="Compiling ${app.name} - build ${app.version}..." />
		<mkdir dir="${classes.home}" />
		<javac source="1.7" srcdir="${git.repo}/src" includeantruntime="false" destdir="${classes.home}" debug="yes">
			<classpath refid="project.class.path" />
		</javac>
		<echo message="Sucsess: ${app.name} - build ${app.version} compiled." />
	</target>

	<!-- Create jar file-->
	<target name="jar" depends="sub.compile,sub.manifest">
		<echo message="Generating jar file..." />
		<jar destfile="${app.name}.jar" basedir="${classes.home}" manifest="${classes.home}/META-INF/MANIFEST.MF">
			<zipfileset src="${lib.home}/kduXtra.jar" />
			<zipfileset src="${lib.home}/looks-1.3.2.jar" />
		</jar>
		<echo message="${app.name}.jar Generated!" />
	</target>

	<!-- Create Manifest-->
	<target xmlns:xalan="http://xml.apache.org/xslt" name="sub.manifest">
		<echo message="Generating manifest file..." />
		<mkdir dir="${classes.home}/META-INF" />
		<manifest mode="update" file="${classes.home}/META-INF/MANIFEST.MF">
			<attribute name="Implementation-Vendor" value="Carlos Eduardo Genz" />
			<attribute name="Implementation-Title" value="${app.name}" />
			<attribute name="Implementation-Version" value="${app.version}" />
			<attribute name="Main-Class" value="${main.class}" />
		</manifest>
		<echo message="Manifest file Generated!" />
	</target>

	<!-- Clear folder-->
	<target name="sub.clear">
		<echo message="INFO: Performing initial cleanup." />
		<delete dir="jSudoku" />
		<delete file="${app.name}.jar" />
		<delete file="${checkstyle_report}" />
		<echo message="Sucsess: Cleaning completed." />
	</target>

	<!-- Clone repo-->
	<target name="git.getsource">
		<echo message="--------- Git credentials -----------" />
		<echo message="Destination folder: jSudoku" />
		<echo message="Source link: https://github.com/brosseeliande/jSudoku.git" />
		<echo message="-------------------------------------" />
		<git command="clone">
			<args>
				<arg value="https://github.com/brosseeliande/jSudoku.git" />
				<arg value="jSudoku" />
			</args>
		</git>
		<fail message="Cloning Failed! The directory `jSudoku` does not exist.">
			<condition>
				<not>
					<available file="jSudoku" />
				</not>
			</condition>
		</fail>
		<echo message="Sucsess: Repository cloned." />
	</target>

	<!-- Run Checksyler-->
	<target name="checker">
		<echo message="INFO: Running Checkstyle on source code..." />
		<checkstyle config="${checkstyle_dir}/docs/sun_checks.xml" failOnViolation="false">
			<fileset dir="jSudoku/src" includes="**/*.java" />
			<formatter type="plain" />
			<formatter type="xml" toFile="${checkstyle_report}" />
		</checkstyle>
	</target>
	
</project>
